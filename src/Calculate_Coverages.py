#!/usr/bin/env python
# coding: utf-8
import sys
import argparse as ap
import os
from Binnacle_IO_Utility import *

parser = ap.ArgumentParser(description="binnacle: A tool for binning metagenomic datasets using assembly graphs and scaffolds generated by metacarvel")
parser.add_argument("-g","--assembly", help="Assembly Graph generated by Metacarvel", required=True)
parser.add_argument("-a","--coverage", help="Output generated by running genomecov -d on the bed file generated by MetaCarvel", required=True)
parser.add_argument("-c",'--contigs', help="Contigs generated by the assembler, contigs.fasta",default="true", required=True)
parser.add_argument("-d","--dir", help="output directory for results", required=True)
parser.add_argument("-b","--binning", default="binnacle",
					help="Choice of Binning Algorithm to format the coverage outputs\n" +
					"1. Metabat\n"+
					"2. Maxbin2\n"+
					"3. Concoct\n"+
					"4. Binnacle's binning algorithm (default)")
args = parser.parse_args()

graph_path = args.assembly
coverage_path  =  args.coverage
output_dir = args.dir
Contigs_Path = args.contigs

if not isdir(output_dir): os.makedirs(output_dir)

df_coverage, G = Load_Read_Coverage_and_Assembly_Graph(graph_path, coverage_path) 
print('Loaded Coverage and Assembly Graph')

Write_Coverage_Outputs(G, df_coverage, output_dir)
Coords_Path = output_dir+'Coords_After_Delinking.txt'
op_path = output_dir+'Scaffolds.fasta'
Write_Scaffolds(Contigs_Path, Coords_Path, op_path)
print('Written Fasta Files')
cov_path = output_dir+'Summary_After_Delinking.txt'
Format_Outputs(args.binning, cov_path, output_dir)